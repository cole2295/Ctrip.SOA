<#+
    public class IBusinessTemplate : Template
    {
        private DatabaseSchemaReader.DataSchema.DatabaseTable _databaseTable;
        private ClassGenInfo _classGenInfo;

        public IBusinessTemplate(ClassGenInfo classGenInfo, DatabaseSchemaReader.DataSchema.DatabaseTable databaseTable)
        {
            _classGenInfo = classGenInfo;
            _databaseTable = databaseTable;
        }

        private string _className;
        protected string ClassName
        {
            get
            {
                if (string.IsNullOrWhiteSpace(_className))
                {
                    _className = _classGenInfo.GetClassName(_databaseTable.Name);
                }

                return _className;
            }
        }

        private string _tableName;
        protected string TableName
        {
            get
            {
                if (string.IsNullOrWhiteSpace(_tableName))
                {
                    _tableName = ClassName.Substring(_classGenInfo.NamePrefix.Length, ClassName.Length -_classGenInfo.NamePrefix.Length - _classGenInfo.NameSuffix.Length);
                }

                return _tableName;
            }
        }

        private string _modelName;
        protected string ModelName
        {
            get
            {
                if (string.IsNullOrWhiteSpace(_modelName))
                {
                    _modelName = TableName + "Model";
                }

                return _modelName;
            }
        }

        private string _entityName;
        protected string EntityName
        {
            get
            {
                if(string.IsNullOrWhiteSpace(_entityName))
                {
                    _entityName = TableName + "Entity";
                }

                return _entityName;
            }
        }

        private string _fileName;
        public string FileName
        {
            get
            {
                if (string.IsNullOrWhiteSpace(_fileName))
                {
                    _fileName = ClassName + ".cs";
                }

                return _fileName;
            }
        }

        public override string TransformText()
        {
#>
/* ->
 * -> 该代码使用工具生成，请勿手动修改 
 * -> 生成时间： <#= DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") #> 
 */

using Ctrip.SOA.Bussiness.<#= _databaseTable.Name #>.DataContract;
using Ctrip.SOA.Infratructure.ServiceProxy;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ctrip.SOA.Bussiness.<#= _databaseTable.Name #>.IBusiness
{
    public interface I<#= _databaseTable.Name #>BLL
    {
        <#= _databaseTable.Name #>ModelResponse Add<#= _databaseTable.Name #>(<#= _databaseTable.Name #>ModelRequest entity);

        BaseResponse Update<#= _databaseTable.Name #>(<#= _databaseTable.Name #>ModelRequest entity);

        BaseResponse Delete<#= _databaseTable.Name #>(<#= _databaseTable.Name #>ModelRequest entity);

        List<<#= _databaseTable.Name #>ModelResponse> GetAll<#= _databaseTable.Name #>s();

        <#= _databaseTable.Name #>ModelResponse Get<#= _databaseTable.Name #>(<#= _databaseTable.Name #>ModelRequest entity);
    }
}

<#+
            return this.GenerationEnvironment.ToString();
        }
    }
#>

